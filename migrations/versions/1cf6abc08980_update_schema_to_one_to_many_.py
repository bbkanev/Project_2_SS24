"""Update schema to one-to-many relationship

Revision ID: 90fbd71f33a8
Revises: 630b9e4657d0
Create Date: 2024-06-22 17:03:48.087157

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1cf6abc08980'
down_revision = '630b9e4657d0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_question')

    with op.batch_alter_table('question', schema=None) as batch_op:
        batch_op.add_column(sa.Column('test_id', sa.UUID(), nullable=False))
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.create_foreign_key('fk_question_test', 'test', ['test_id'], ['id'])  # Add constraint name

    with op.batch_alter_table('test', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)
        batch_op.alter_column('created_by',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    with op.batch_alter_table('test', schema=None) as batch_op:
        batch_op.alter_column('created_by',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    with op.batch_alter_table('question', schema=None) as batch_op:
        batch_op.drop_constraint('fk_question_test', type_='foreignkey')  # Add constraint name here as well
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)
        batch_op.drop_column('test_id')

    op.create_table('test_question',
    sa.Column('test_id', sa.NUMERIC(), nullable=False),
    sa.Column('question_id', sa.NUMERIC(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.PrimaryKeyConstraint('test_id', 'question_id')
    )
    # ### end Alembic commands ###
